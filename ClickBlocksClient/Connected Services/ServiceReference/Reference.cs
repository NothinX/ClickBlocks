//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClickBlocksClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://schemas.datacontract.org/2004/07/ClickBlocksServer")]
    [System.SerializableAttribute()]
    public partial class Record : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ClickBlocks", ConfigurationName="ServiceReference.IClickBlocksService")]
    public interface IClickBlocksService {
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/Login", ReplyAction="ClickBlocks/IClickBlocksService/LoginResponse")]
        int Login(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/Login", ReplyAction="ClickBlocks/IClickBlocksService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/Register", ReplyAction="ClickBlocks/IClickBlocksService/RegisterResponse")]
        bool Register(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/Register", ReplyAction="ClickBlocks/IClickBlocksService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/UploadPoints", ReplyAction="ClickBlocks/IClickBlocksService/UploadPointsResponse")]
        void UploadPoints(string UserName, int UserPoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/UploadPoints", ReplyAction="ClickBlocks/IClickBlocksService/UploadPointsResponse")]
        System.Threading.Tasks.Task UploadPointsAsync(string UserName, int UserPoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/UploadScore", ReplyAction="ClickBlocks/IClickBlocksService/UploadScoreResponse")]
        void UploadScore(string UserName, string GameMode, int GameScore, System.DateTime GameTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/UploadScore", ReplyAction="ClickBlocks/IClickBlocksService/UploadScoreResponse")]
        System.Threading.Tasks.Task UploadScoreAsync(string UserName, string GameMode, int GameScore, System.DateTime GameTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/GetRecordList", ReplyAction="ClickBlocks/IClickBlocksService/GetRecordListResponse")]
        ClickBlocksClient.ServiceReference.Record[] GetRecordList(string GameMode, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/GetRecordList", ReplyAction="ClickBlocks/IClickBlocksService/GetRecordListResponse")]
        System.Threading.Tasks.Task<ClickBlocksClient.ServiceReference.Record[]> GetRecordListAsync(string GameMode, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/GetPeopleList", ReplyAction="ClickBlocks/IClickBlocksService/GetPeopleListResponse")]
        ClickBlocksClient.ServiceReference.Record[] GetPeopleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="ClickBlocks/IClickBlocksService/GetPeopleList", ReplyAction="ClickBlocks/IClickBlocksService/GetPeopleListResponse")]
        System.Threading.Tasks.Task<ClickBlocksClient.ServiceReference.Record[]> GetPeopleListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClickBlocksServiceChannel : ClickBlocksClient.ServiceReference.IClickBlocksService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClickBlocksServiceClient : System.ServiceModel.ClientBase<ClickBlocksClient.ServiceReference.IClickBlocksService>, ClickBlocksClient.ServiceReference.IClickBlocksService {
        
        public ClickBlocksServiceClient() {
        }
        
        public ClickBlocksServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClickBlocksServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClickBlocksServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClickBlocksServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Login(string UserName, string Password) {
            return base.Channel.Login(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string UserName, string Password) {
            return base.Channel.LoginAsync(UserName, Password);
        }
        
        public bool Register(string UserName, string Password) {
            return base.Channel.Register(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string UserName, string Password) {
            return base.Channel.RegisterAsync(UserName, Password);
        }
        
        public void UploadPoints(string UserName, int UserPoints) {
            base.Channel.UploadPoints(UserName, UserPoints);
        }
        
        public System.Threading.Tasks.Task UploadPointsAsync(string UserName, int UserPoints) {
            return base.Channel.UploadPointsAsync(UserName, UserPoints);
        }
        
        public void UploadScore(string UserName, string GameMode, int GameScore, System.DateTime GameTime) {
            base.Channel.UploadScore(UserName, GameMode, GameScore, GameTime);
        }
        
        public System.Threading.Tasks.Task UploadScoreAsync(string UserName, string GameMode, int GameScore, System.DateTime GameTime) {
            return base.Channel.UploadScoreAsync(UserName, GameMode, GameScore, GameTime);
        }
        
        public ClickBlocksClient.ServiceReference.Record[] GetRecordList(string GameMode, string UserName) {
            return base.Channel.GetRecordList(GameMode, UserName);
        }
        
        public System.Threading.Tasks.Task<ClickBlocksClient.ServiceReference.Record[]> GetRecordListAsync(string GameMode, string UserName) {
            return base.Channel.GetRecordListAsync(GameMode, UserName);
        }
        
        public ClickBlocksClient.ServiceReference.Record[] GetPeopleList() {
            return base.Channel.GetPeopleList();
        }
        
        public System.Threading.Tasks.Task<ClickBlocksClient.ServiceReference.Record[]> GetPeopleListAsync() {
            return base.Channel.GetPeopleListAsync();
        }
    }
}
